@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	:root {
		--slate-50: 13, 14, 15;
		--slate-100: 23, 25, 28;
		--slate-200: 44, 47, 53;
		--slate-300: 65, 69, 78;
		--slate-400: 86, 92, 103;
		--slate-500: 107, 114, 128;
		--slate-600: 136, 142, 155;
		--slate-700: 166, 171, 181;
		--slate-800: 197, 200, 206;
		--slate-900: 227, 229, 232;
		--slate-950: 243, 243, 245;
		--modal-bg: 23, 25, 28;
	}

	[data-theme="dark"],
	.dark,
	.dark-theme {
		--slate-50: 243, 243, 245;
		--slate-100: 227, 229, 232;
		--slate-200: 197, 200, 206;
		--slate-300: 166, 171, 181;
		--slate-400: 136, 142, 155;
		--slate-500: 107, 114, 128;
		--slate-600: 86, 92, 103;
		--slate-700: 65, 69, 78;
		--slate-800: 44, 47, 53;
		--slate-900: 23, 25, 28;
		--slate-950: 13, 14, 15;
		--modal-bg: 23, 25, 28;
	}
}

html,
body {
	font-size: 14px;
	/*base for rem calc i.e, 1rem = 14px;*/
	padding: 0;
	margin: 0;
	@apply font-primary overflow-auto tracking-tight;
}

@media screen and (min-width: 640px) {
	html {
		font-size: 16px;
	}
}

a {
	color: inherit;
	text-decoration: none;
	@apply font-primary;
}

* {
	box-sizing: border-box;
}

@media (prefers-color-scheme: dark) {
	html {
		color-scheme: dark;
	}

	body {
		/* background: black; */
		@apply bg-slate-950 text-slate-300;
	}
}

// /* Buttons */
// @layer button {
// 	.default {

// 		@apply px-4 py-2 rounded-lg text-white font-medium text-lg;
// 	}

// 	.filled {
// 		@apply bg-blue-500 hover:bg-blue-600;
// 	}

// 	.outline {
// 		@apply border-2 border-blue-500 hover:bg-blue-500 hover:text-white;
// 	}

// 	.text {
// 		@apply text-slate-600 hover:bg-slate-200 bg-transparent;
// 	}

// 	.danger {
// 		@apply bg-red-500 hover:bg-red-600 text-white;
// 	}

// 	.warning {
// 		@apply bg-yellow-600 hover:bg-yellow-700 text-white;
// 	}
// }

.input {
	@apply appearance-none py-2 px-2 text-slate-200 
		rounded-lg border-2 border-slate-700 
		placeholder:text-slate-500/50
		focus:outline-none focus:ring-2 focus:ring-slate-200 focus:border-transparent;

	&.error {
		@apply border-red-500;
	}

	&.warning {
		@apply border-yellow-500;
	}

	&.success {
		@apply border-green-500;
	}

	&.disabled {
		@apply opacity-50 mix-blend-multiply cursor-not-allowed;
	}
}

.button {
	@apply px-4 py-2 rounded-lg;

	&.rounded {
		@apply rounded-full;
	}

	&.filled {
		@apply bg-blue-500 hover:bg-blue-600;
		&.disabled {
			@apply opacity-50 mix-blend-multiply cursor-not-allowed text-white bg-slate-500  hover:bg-slate-500;
		}
	}

	&.outlined {
		@apply text-blue-500 border-2 border-blue-500 hover:bg-blue-500 hover:text-blue-600 rounded-lg;
		&.disabled {
			@apply opacity-60 mix-blend-multiply cursor-not-allowed text-slate-600 hover:bg-transparent border-x-slate-400;
		}
	}

	&.text {
		@apply text-slate-600 hover:bg-slate-700 hover:bg-opacity-70 bg-transparent;
	}

	&.danger {
		@apply bg-red-500 hover:bg-red-600 text-white;
		&.disabled {
			@apply opacity-50 mix-blend-multiply cursor-not-allowed text-white bg-slate-500 hover:bg-slate-500;
		}
	}

	&.warning {
		@apply bg-yellow-600 hover:bg-yellow-700 text-white;
	}

	&.no-style {
		@apply bg-transparent text-slate-600 hover:bg-transparent hover:text-slate-500;
	}
}

.alert-overlay {
	@apply bg-black/75 fixed inset-0;
}

.alert-content {
	@apply bg-slate-950 border-2 border-solid border-slate-700 rounded-lg shadow-lg fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[90vw] max-w-[30rem] px-6 pt-8 pb-3 focus:outline-none;
}

/* Commands Popup for the Editor */
.commands-popup {
	@apply flex flex-col items-start rounded-lg overflow-x-hidden overflow-y-scroll text-black;
	width: 24rem;
	max-height: 20rem;
	background: radial-gradient(
			105.84% 344.16% at 84.06% 34.81%,
			rgba(51, 167, 251, 0.16) 0%,
			rgba(103, 51, 251, 0.16) 100%
		),
		rgba(255, 255, 255, 0.7);
	box-shadow: 0px 14px 54px rgba(0, 0, 0, 0.25);
	backdrop-filter: blur(15px);
}

.commands-popup > button {
	@apply w-full flex px-8 py-2 text-left font-medium text-lg 
  text-black border-b border-solid border-slate-400;
}

.commands-popup > button:hover {
	@apply bg-white bg-opacity-20;
}

.commands-popup > button.is-selected {
	@apply bg-white bg-opacity-50;
}

/* Add this in your CSS file */
::-webkit-scrollbar {
	width: 8px;
	height: 4px;
}

::-webkit-scrollbar-thumb {
	background-color: rgba(0, 0, 0, 0.5);
	border-radius: 4px;
}

::-webkit-scrollbar-track {
	background-color: rgba(0, 0, 0, 0.1);
}

/* Assuming you've configured Tailwind to use the JIT mode and added
the scrollbar plugin to your tailwind.config.js */
.scrollbar-thin {
	scrollbar-width: thin;
	scrollbar-color: rgba(0, 0, 0, 0.5) rgba(0, 0, 0, 0.1);
}

.hide-scrollbar {
	-ms-overflow-style: none;
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}

/** Custom Animations */
.slide-in-from-bottom {
	animation: slide-in-from-bottom 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes slide-in-from-bottom {
	0% {
		transform: translateY(100%);
		opacity: 0;
	}
	100% {
		transform: translateY(0);
		opacity: 1;
	}
}

.slide-in-from-right {
	animation: slide-in-from-right 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes slide-in-from-right {
	0% {
		transform: translateX(100%);
		opacity: 0;
	}
	100% {
		transform: translateX(0);
		opacity: 1;
	}
}

@keyframes grow-in-from-left {
	0% {
		transform: translateX(-100%) scaleX(0);
	}
	100% {
		transform: translateX(0) scaleX(1);
	}
}

.grow-in-from-left {
	animation: grow-in-from-left 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

// Marquee Animation
@keyframes marquee {
	0% {
		transform: translateX(0);
	}
	100% {
		transform: translateX(-100%);
	}
}

.animate-marquee {
	animation: marquee 20s linear infinite;
}

.animate-marquee:hover {
	animation-play-state: paused;
}

/** 
 * Experimental: Custom CSS for dialog transition effect
*/

// dialog {
//	/* UPDATE: -- open / syncs styles with dialog state */
//	--open: 0;
//	/* READ: --closed / exposed for styling convenience */
//	--closed: calc( (var(--open) - 1) * -1);

//	transform: translateY(calc(var (--closed) * -50%));
//	&, &::backdrop {
//		/* This works like a conditional statement */
//		--duration: calc( (var (--open) * .5s) + (var(--closed) * .25s)) ;

//		transition: all var(--duration) ease-out allow-discrete;
//		opacity: var (--open);
//	｝

//	&[open] {
//		--open: 1;
//	｝

//	@starting-style {
//		--open: 1;
//		&[open] {
//			--open: 0;
//		｝
//	}
//}
